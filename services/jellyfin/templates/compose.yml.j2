version: "3.8"

services:
  jellyfin:
    container_name: jellyfin
    hostname: jellyfin
    image: linuxserver/jellyfin:{{ jellyfin_version | default('latest') }}
    restart: unless-stopped
{% if jellyfin_hw_decode is defined and 'nvidia' in jellyfin_hw_decode %}
    runtime: nvidia
{% endif %}
    environment:
      - PUID={{ ansible_facts.user_uid }}
      - PGID={{ ansible_facts.user_gid }}
      - TZ={{ timezone }}
{% if jellyfin_hw_decode is defined and 'nvidia' in jellyfin_hw_decode %}
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
{% endif %}
    networks:
      - {{ jellyfin_network | default(networks[0]) }}
    ports:
      - 8096:8096
    volumes:
      - {{ project_dir }}/jellyfin/data:/config
      - jellyfin-cache:/cache
      - {{ jellyfin_media_path }}:/media
{% if jellyfin_hw_decode is defined and 'intel' in jellyfin_hw_decode %}
    devices:
      - /dev/dri:/dev/dri
{% endif %}
    labels:
      - domain={{ domain }}
{% if 'traefik' in services %}
      - traefik.enable=true
      - traefik.http.routers.jellyfin.rule=Host(`jellyfin.{{ domain }}`)
      - traefik.http.routers.jellyfin.entrypoints=websecure
      - traefik.http.services.jellyfin.loadbalancer.server.port=8096
      - traefik.http.routers.jellyfin.service=jellyfin
      - traefik.http.routers.jellyfin.tls.certresolver={{ traefik_acme_provider }}
{% endif %}
{% if 'flame' in services %}
      - flame.type=application
      - flame.name=jellyfin
      - flame.url=jellyfin.{{ domain }}
      - flame.icon=shark-fin
{% endif %}
{% if 'watchtower' in services %}
{% if jellyfin_autoupdate is defined and jellyfin_autoupdate == "enable" %}
      - com.centurylinklabs.watchtower.enable=true
{% endif %}
{% if jellyfin_autoupdate is not defined or jellyfin_autoupdate == "monitor" %}
      - com.centurylinklabs.watchtower.monitor-only=true
{% endif %}
{% endif %}

networks:
  {{ jellyfin_network | default(networks[0]) }}:
    external: true

volumes:
  jellyfin-cache: 
    external: true
