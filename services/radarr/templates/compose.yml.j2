version: "3.8"

services:
  radarr:
    container_name: radarr
    hostname: radarr
    image: ghcr.io/linuxserver/radarr:{{ radarr_version | default('latest') }}
    restart: unless-stopped
    environment:
      - PUID={{ ansible_facts.user_uid }}
      - PGID={{ ansible_facts.user_gid }}
      - TZ={{ timezone }}
{% if radarr_dark_theme is not defined or radarr_dark_theme is true %}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:radarr
{% endif %}
    volumes:
      - {{ project_dir }}/radarr/data:/config
      - {{ radarr_data_path }}:/data
    networks:
      - {{ radarr_network | default(networks[0]) }}
    ports:
      - 7878:7878
    labels:
      - domain={{ domain }}
{% if 'traefik' in services %}
      - traefik.enable=true
      - traefik.http.routers.radarr.rule=Host(`radarr.{{ domain }}`)
      - traefik.http.routers.radarr.entrypoints=websecure
      - traefik.http.services.radarr.loadbalancer.server.port=7878
      - traefik.http.routers.radarr.service=radarr
      - traefik.http.routers.radarr.tls.certresolver={{ traefik_acme_provider }}
{% endif %}
{% if 'flame' in services %}
      - flame.type=application
      - flame.name=Radarr
      - flame.url=radarr.{{ domain }}
      - flame.icon=movie
{% endif %}
{% if 'watchtower' in services %}
{% if radarr_autoupdate is defined and radarr_autoupdate == "enable" %}
      - com.centurylinklabs.watchtower.enable=true
{% endif %}
{% if radarr_autoupdate is not defined or radarr_autoupdate == "monitor" %}
      - com.centurylinklabs.watchtower.monitor-only=true
{% endif %}
{% endif %}

networks:
  {{ radarr_network | default(networks[0]) }}:
    external: true
