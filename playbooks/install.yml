- name: Install home server services

  hosts: all

  gather_facts: true

  pre_tasks:

    - name: Set timezone to {{ timezone }}
      timezone:
        name: "{{ timezone }}"
      become: true

    - name: Install packages and update
      include_tasks: ../tasks/update_host.yml

    - name: Prepare project folder
      include_tasks: ../tasks/prep_project_dir.yml

    - name: Setup mounts
      include_tasks: ../tasks/mounts.yml
      vars:
        name: "{{ item.key }}"
        mount: "{{ item.value }}"
      with_items: "{{ mounts | dict2items }}"
      when: mounts is defined

    - name: Include vars for selected services
      include_tasks: ../tasks/include_vars_if_present.yml
      vars:
        service: "{{ item }}"
      with_items: "{{ services }}"
      when: services

    - name: Include host-specific vars for selected services
      include_tasks: ../tasks/include_vars_if_present.yml
      vars:
        service: "{{ item }}"
        file: "{{ inventory_hostname }}"
      with_items: "{{ services }}"
      when: services

    - name: Start preconfigure for selected services
      include_tasks: ../tasks/include_tasks_if_present.yml
      vars:
        service: "{{ item }}"
        task: preconfigure
      with_items: "{{ services }}"
      when: services

  roles:
    - role: geerlingguy.docker
      become: true
      vars:
        docker_install_compose: false
        docker_users: "{{ ansible_facts.user_id }}"
      when: '"x86_64" in ansible_architecture'
      
    - role: geerlingguy.docker_arm
      become: true
      vars:
        docker_install_compose: false
        docker_users: "{{ ansible_facts.user_id }}"
      when: '"arm" in ansible_architecture or "aarch64" in ansible_architecture'

    - role: geerlingguy.pip
      become: true
      vars:
        pip_install_packages:
          - name: docker
          - name: docker-compose
          - name: passlib

  tasks:
    - name: Reboot host
      become: true
      reboot:
      when: reboot_needed

    - name: Reset connection to reload user changes if not rebooted
      meta: reset_connection
      when: not reboot_needed

    - name: Default networks
      set_fact:
        networks: "{{ networks | default(['main']) }}"

    - name: Setup docker networks
      include_tasks: ../tasks/setup_docker_network.yml
      vars:
        network: "{{ item }}"
      with_items: "{{ networks }}"

    - name: Setup docker volumes
      include_tasks: ../tasks/create_volume.yml
      vars:
        volume: "{{ item }}"
      with_items: "{{ volumes }}"
      when: volumes is defined and volumes | length > 0

    - name: Start install for selected services
      include_tasks: ../tasks/include_tasks_if_present.yml
      vars:
        service: "{{ item }}"
        task: install
      with_items: "{{ services }}"
      when: services

    - name: Start configure for selected services
      include_tasks: ../tasks/include_tasks_if_present.yml
      vars:
        service: "{{ item }}"
        task: configure
      with_items: "{{ services }}"
      when: services
