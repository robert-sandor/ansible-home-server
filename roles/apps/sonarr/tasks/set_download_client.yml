---
- name: Get download clients
  ansible.builtin.uri:
    method: GET
    url: "{{ sonarr_api }}/downloadclient"
    headers:
      x-api-key: "{{ sonarr_api_key }}"
  register: get_download_clients_response
  retries: 10
  delay: 10
  until: get_download_clients_response.status > 0 and get_download_clients_response.status != 404
  changed_when: false

- name: Set transmission as the download client
  vars:
    find_transmission_query: "[?name == `transmission`]"
    transmission_configured: "{{ get_download_clients_response.json | json_query(find_transmission_query) | length() > 0 }}"
  when: not transmission_configured
  ansible.builtin.uri:
    method: POST
    url: "{{ sonarr_api }}/downloadclient"
    headers:
      x-api-key: "{{ sonarr_api_key }}"
    body_format: json
    body:
      enable: true
      protocol: torrent
      priority: 1
      removeCompletedDownloads: true
      removeFailedDownloads: true
      name: transmission
      implementationName: transmission
      implementation: transmission
      configContract: transmissionsettings
      infoLink: 'https://wiki.servarr.com/sonarr/supported#transmission'
      fields:
        - name: host
          value: "{{ sonarr_download_client_host }}"
        - name: port
          value: "{{ sonarr_download_client_port }}"
        - name: useSsl
          value: "{{ sonarr_download_client_ssl }}"
        - name: urlBase
          value: "/transmission/"
        - name: username
          value: "{{ sonarr_download_client_user }}"
        - name: password
          value: "{{ sonarr_download_client_password }}"
        - name: tvCategory
          value: "{{ sonarr_download_client_category }}"
        - name: recentTvPriority
          value: 0
        - name: olderTvPriority
          value: 0
        - name: tvDirectory
        - name: addPaused
          value: false
      tags: []
    status_code: 201
  register: add_download_client_response
  retries: 10
  delay: 10
  until: add_download_client_response.status > 0 and add_download_client_response.status != 404
  changed_when: true

- name: Get remote path mappings
  ansible.builtin.uri:
    method: GET
    url: "{{ sonarr_api }}/remotepathmapping"
    headers:
      x-api-key: "{{ sonarr_api_key }}"
  register: get_remote_path_mapping_response
  retries: 10
  delay: 10
  until: get_remote_path_mapping_response.status > 0 and get_remote_path_mapping_response.status != 404
  changed_when: false

- name: Add remote mapping for download client
  vars:
    query: "[?host == `{{ sonarr_download_client_host }}`]"
    remote_mapping_configured: "{{ get_remote_path_mapping_response.json | json_query(query) | length() > 0 }}"
  when: not remote_mapping_configured
  ansible.builtin.uri:
    method: POST
    url: "{{ sonarr_api }}/remotepathmapping"
    headers:
      x-api-key: "{{ sonarr_api_key }}"
    body_format: json
    body:
      host: "{{ sonarr_download_client_host }}"
      remotePath: "{{ sonarr_download_client_remotePath }}"
      localPath: /data{{ sonarr_download_client_remotePath }}
    status_code: 201
  register: set_remote_mapping_response
  retries: 10
  delay: 10
  until: set_remote_mapping_response.status > 0 and set_remote_mapping_response.status != 404
  changed_when: true
